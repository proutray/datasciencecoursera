a <- c(1,2,3,4)
b <- c(1,2,3,4)
a+b
a*b
x <- c(0.18, -1.54, 0.42, 0.95)
a-1
w <- c(2, 1, 3, 1)
a**2
u <- 0.1471
sum(w*(x-u)**2)
u <- 0.3
sum(w*(x-u)**2)
u <- 1.077
sum(w*(x-u)**2)
u <- 0.0025
sum(w*(x-u)**2)
install.packages("UsingR")
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
y <- c(1.39, 0.72, 1.55, 0.48, 1.19, -1.59, 1.23, -0.65, 1.49, 0.05)
b <- 0.8263
sum((y-x*b)**2)
b <- -0.04462
sum((y-x*b)**2)
b <- -1.713
sum((y-x*b)**2)
b <- 0.59915
sum((y-x*b)**2)
data(mtcars)
head(mtcars)
?lm
y <- mpg
y <- mtmpg
y <- mtcars$mpg
x <- mtcars$wt
?I
lm(formula = I(y - mean(y))~ I(x-mean(x))-1)
x <- c(8.58, 10.46, 9.01, 9.64, 8.86)
x <- c(8.58, 10.46, 9.01, 9.64, 8.86)
mean(x)
sd(x)
(x-mean(x))/sd(x)
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
p <- 0.573
sum((x-p)**2)
p <- 0.8
sum((x-p)**2)
p <- 0.36
sum((x-p)**2)
p <- 0.44
sum((x-p)**2)
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
y <- c(1.39, 0.72, 1.55, 0.48, 1.19, -1.59, 1.23, -0.65, 1.49, 0.05)
slope <- cor(x,y)*sd(y)/sd(x)
inter <- mean(y) - slope*mean(x)
cor(1.5,0.4)
?read.csv
setwd("~/Dropbox/DataScience/Coursera_DataScienceTrack/5_ReproducibleResearch/PA1/RepData_PA2")
data <- read.csv(bzfile('repdata_data_StormData.csv.bz2'))
head(data)
unique(data$EVTYPE)
data$EVTYPE <- tolower(data$EVTYPE)
unique(data$EVTYPE)
data <- read.csv(bzfile('repdata_data_StormData.csv.bz2'), strip.white=TRUE)
data$EVTYPE <- tolower(data$EVTYPE)
unique(data$EVTYPE)
View(data)
data$FATALITIES -< as.numeric(data$FATALITIES); data$INJURIES <- as.numeric(data$INJURIES)
data$FATALITIES <- as.numeric(data$FATALITIES); data$INJURIES <- as.numeric(data$INJURIES)
data$POPULATIONHEALTH <- data$FATALITIES + data$INJURIES
View(data)
newdata <- c(data$POPULATIONHEALTH, data$EVTYPE)
newdata <- cbind(data$POPULATIONHEALTH, data$EVTYPE)
View(newdata)
newdata <- data.frame(data$POPULATIONHEALTH, data$EVTYPE)
View(newdata)
data1 <- data.frame(data$POPULATIONHEALTH, data$EVTYPE)
rm(newdata)
View(data1)
names(data1)[1]<- PopulationHealth
names(data1)[1]<- "PopulationHealth"
View(data1)
names(data1)[2]<- "Event"
View(data1)
View(data)
data2 <- data.frame(data$PROPDMG, data$EVTYPE)
View(data2)
names(data2)[1]<- "PropertyDamage"; names(data2)[2]<- "Event" #Renaming the columns
data3 <- cbind(unique(data1[1]), do.call(rbind, tapply(data1[-1], data1[[1]], colSums)))
data1[-1]
data1[[1]]
data1 <- data.frame(data$EVTYPE, data$POPULATIONHEALTH)
names(data1)[1]<- "Event"; names(data1)[2]<- "PopulationHealth"
data3 <- cbind(unique(data1[1]), do.call(rbind, tapply(data1[-1], data1[[1]], colSums)))
?tapply
unique(data1[1])
len(unique(data1[1]))
length(unique(data1[1]))
length(unique(data1))
x <- unique(data1[1])
x <- c(unique(data1[1]))
length(x)
x <-data.frame(unique(data1[1]))
y <- aggregate(cbind(data1$PopulationHealth), by = list(category = data1$Event), FUN = sum)
View(y)
?sort
z <- sort(y)
View(y)
z <- sort(y, y$V1)
z <- sort(y, y$V1, decreasing = TRUE)
y$V1 <- as.numeric(y$V1)
z <- sort(y, y$V1, decreasing = TRUE)
y$V1 <- as.integer(y$V1)
z <- sort(y, y$V1, decreasing = TRUE)
class(y$V1)
?order
order(y)
y <- order(y)
y <- aggregate(cbind(data1$PopulationHealth), by = list(category = data1$Event), FUN = sum)
View(x)
z <- y[order(y$V1)]
z <- y[order(y$V1),]
View(z)
z <- y[order(y$V1, decreasing = T),]
View(z)
data1$Event = "rip current"
data1 <- data.frame(data$EVTYPE, data$POPULATIONHEALTH)
names(data1)[1]<- "Event"; names(data1)[2]
names(data1)[1]<- "Event"; names(data1)[2]<- "PopulationHealth"
data1$Event[data1$Event = rip currents] = "rip current"
data1$Event[data1$Event == "rip currents"] = "rip current"
data1$Event[data1$Event == "thunderstorm winds"] = "thunderstorm wind"
y <- aggregate(cbind(data1$PopulationHealth), by = list(category = data1$Event), FUN = sum)
z <- y[order(y$V1, decreasing = T),]
z[1:20]
head(z,20)
z1 <- head(z,20)
plot (z1)
plot (z1, type = 'h')
class(z1$V1)
z1$V1
View(`z1`)
plot (z1$V1, z1$category, type = 'h')
plot (z1$category,z1$V1 type = 'h')
plot (z1$category,z1$V1, type = 'h')
class(z1$category)
z1$category <- as.character(z1$category)
plot (z1$category,z1$V1, type = 'h')
hist(z1$category)
hist(z1$v1)
hist(z1$V1)
z1$V1[1]
z1$V1 <- as.integer(z1$V1)
hist(z1$V1)
rownames(z1)<- null
rownames(z1)<- NULL
View(`z1`)
data$EVTYPE <- tolower(data$EVTYPE)
data$FATALITIES <- as.numeric(data$FATALITIES); data$INJURIES <- as.numeric(data$INJURIES)
#Choosing relevant columns ONLY
data1 <- data.frame(data$EVTYPE, data$POPULATIONHEALTH)
data2 <- data.frame(data$EVTYPE, data$PROPDMG)
names(data1)[1]<- "Event"; names(data1)[2]<- "PopulationHealth" #Renaming the columns
#Renaming certain particular values
data1$Event[data1$Event == "rip currents"] = "rip current"
data1$Event[data1$Event == "thunderstorm winds"] = "thunderstorm wind"
aggr_data <- aggregate(cbind(data1$PopulationHealth), by = list(category = data1$Event), FUN = sum)
ordrd_data <- aggr_data[order(aggr_data$V1, decreasing = T),]
output1 <- head(ordrd_data, 20); rownames(output1) <- NULL
output1
plot(output1)
plot(output1, type= "l")
plot(output1$category, output1$V1, type= "l")
data2 <- data.frame(data$EVTYPE, data$PROPDMG)
names(data2)[1]<- "Event"; names(data2)[2]<- "PropertyDamage" #Renaming the columns
aggr_data2 <- aggregate(cbind(data2$PropertyDamage), by = list(category = data2$Event), FUN = sum)
ordrd_data2 <- aggr_data[order(aggr_data2$V1, decreasing = T),]
ordrd_data2 <- aggr_data2[order(aggr_data2$V1, decreasing = T),]
View(ordrd_data2)
names(data2)[1]<- "Event"; names(data2)[2]<- "PropertyDamage" #Renaming the columns
aggr_data2 <- aggregate(cbind(data2$PropertyDamage), by = list(category = data2$Event), FUN = sum)
ordrd_data2 <- aggr_data2[order(aggr_data2$V1, decreasing = T),]
output2 <- head(ordrd_data2, 20); rownames(output2) <- NULL
names(output2)[1] <- "Name of Event"; names(output2)[2] <- "$ property damaged"
output2
View(data)
data$PROPDMGEXP[data$PROPDMGEXP == "K"] = 1000
data$PROPDMGEXP[data$PROPDMGEXP == "K"] = "1000"
data$PROPDMGEXP
data$PROPDMGEXP <- tolower(data$PROPDMGEXP)
View(data)
data$PROPDMGEXP[is.na(data$PROPDMGEXP)] <- 1
View(data)
data$PROPDMGEXP[data$PROPDMGEXP == ""] <- 1
View(data)
data$PROPDMGEXP[data$PROPDMGEXP == "m"] <- 1000000
data$PROPDMGEXP[data$PROPDMGEXP == "k"] <- 1000
data$PROPDMGEXP[data$PROPDMGEXP == "b"] <- 1000000000
unique(data$CROPDMGEXP)
unique(data$PROPDMGEXP)
data$PROPDMGEXP[data$PROPDMGEXP == "0"] <- 1
data$PROPDMGEXP[data$PROPDMGEXP == "5"] <- 1
data$PROPDMGEXP[data$PROPDMGEXP == "6"] <- 1
data$PROPDMGEXP[data$PROPDMGEXP == "?"] <- 1
data$PROPDMGEXP[data$PROPDMGEXP == "4"] <- 1
data$PROPDMGEXP[data$PROPDMGEXP == "2"] <- 1
data$PROPDMGEXP[data$PROPDMGEXP == "3"] <- 1
data$PROPDMGEXP[data$PROPDMGEXP == "h"] <- 1
data$PROPDMGEXP[data$PROPDMGEXP == "7"] <- 1
data$PROPDMGEXP[data$PROPDMGEXP == "8"] <- 1
data$PROPDMGEXP[data$PROPDMGEXP == "-"] <- 1
unique(data$PROPDMGEXP)
data$PROPDMGEXP[data$PROPDMGEXP == "="] <- 1
data$PROPDMGEXP[data$PROPDMGEXP == "+"] <- 1
unique(data$PROPDMGEXP)
data$CROPDMGEXP <- tolower(data$CROPDMGEXP)
data$CROPDMGEXP[data$CROPDMGEXP == "?"] <- 1
data$CROPDMGEXP[data$CROPDMGEXP == "0"] <- 1
data$CROPDMGEXP[data$CROPDMGEXP == "2"] <- 1
data$CROPDMGEXP[data$CROPDMGEXP == "k"] <- 1000
data$CROPDMGEXP[data$CROPDMGEXP == "m"] <- 1000000
data$CROPDMGEXP[data$CROPDMGEXP == "b"] <- 1000000000
unique(data$CROPDMGEXP)
data$CROPDMGEXP[data$CROPDMGEXP == ""] <- 1
unique(data$CROPDMGEXP)
data$CROPDMG = as.numeric(data$CROPDMG)
data$CROPDMGEXP = as.numeric(data$CROPDMGEXP)
data$EconomicDamage = (data$PROPDMG * data$PROPDMGEXP) + (data$CROPDMG * data$CROPDMGEXP)
data$PROPDMG = as.numeric(data$PROPDMG)
data$PROPDMGEXP = as.numeric(data$PROPDMGEXP)
data$EconomicDamage = (data$PROPDMG * data$PROPDMGEXP) + (data$CROPDMG * data$CROPDMGEXP)
data2 <- data.frame(data$EVTYPE, data$EconomicDamage)
names(data2)[1]<- "Event"; names(data2)[2]<- "Economic Damage"
aggr_data2 <- aggregate(cbind(data2$Economic Damage), by = list(category = data2$Event), FUN = sum)
names(data2)[1]<- "Event"; names(data2)[2]<- "EconomicDamage"
aggr_data2 <- aggregate(cbind(data2$EconomicDamage), by = list(category = data2$Event), FUN = sum)
ordrd_data2 <- aggr_data2[order(aggr_data2$V1, decreasing = T),]
output2 <- head(ordrd_data2, 20); rownames(output2) <- NULL
View(output2)
round(output2$V1/1000000000)
?round
round(output2$V1/1000000000, digits = 3)
output2$LOSS <- paste(as.character(round(output2$V1/1000000000, digits = 3)),"billion")
View(output2)
output2$LOSS <- paste("$", as.character(round(output2$V1/1000000000, digits = 2)),"billion")
View(output2)
output2 <- head(ordrd_data2, 20); rownames(output2) <- NULL
output2$V1 <- round(output2$V1/1000000000, digits = 2))
names(output2)[1] <- "Name of Event"; names(output2)[2] <- "Loss in billion $"
output2 <- head(ordrd_data2, 20); rownames(output2) <- NULL
output2$V1 <- round(output2$V1/1000000000, digits = 2)
names(output2)[1] <- "Name of Event"; names(output2)[2] <- "Loss in billion $"
View(output2)
plot(output2)
plot(output2, type = 'l')
output2$Name of Event
names(output2)[1] <- "Name_of_Event"; names(output2)[2] <- "Loss_in_billion_$"
output2$Name_of_Event
output2 <- ordrd_data2[1:20,];
rownames(output2) <- NULL
output2$V1 <- round(output2$V1/1000000000, digits = 2)
names(output2)[1] <- "Name_of_Event"; names(output2)[2] <- "Loss_in_billion_$"
output2
plot(output2, type = 'l')
output2$Name_of_Event
?subset
op2 <- subset(ordrd_data2, V1 > 2.5)
op2
op2 <- subset(ordrd_data2, V1 > 2500000000)
op2
op2 <- subset(ordrd_data2, V1 >= 2500000000)
op2$category
op3$cat <- ordrd_data2$category[1:20]
op3 ,- {}
op3 <- {}
op3$cat <- ordrd_data2$category[1:20]
op3$cat2 <- ordrd_data2$category[1:20]
rm(op3)
op3 <- data.frame(op2[1:20])
op3 <- data.frame(op2[1:20,])
op3
op3$category
class(output2$Name_of_Event)
output2$Name_of_Event <- as.character(output2$Name_of_Event)
output2$Name_of_Event
output2$Loss_in_billion_$ as.numeric(output2$Loss_in_billion_$)
output2$Loss_in_billion_$ <- as.numeric(output2$Loss_in_billion_$)
names(output2)[1] <- "Name_of_Event"; names(output2)[2] <- "Loss_in_billion_dollars"
output2$Loss_in_billion_dollars <- as.numeric(output2$Loss_in_billion_dollars)
plot(output2)
plot(output2$Name_of_Event, output2$Loss_in_billion_dollars)
output2
class(output2$Loss_in_billion_dollars)
class(output2$Name_of_Event)
plot(factors(output2$Name_of_Event), output2$Loss_in_billion_dollars)
plot(factor(output2$Name_of_Event), output2$Loss_in_billion_dollars)
plot(Loss_in_billion_dollars~factor(Name_of_Event), output2, las = 2)
plot(Loss_in_billion_dollars~factor(Name_of_Event), output2, las = 2, xlab = "", ylab = "Loss in billion $", main = "Top 20 Economic Consequences", col = "red")
plot(Loss_in_billion_dollars~factor(Name_of_Event), output2, las = 2, type = "h", xlab = "", ylab = "Loss in billion $", main = "Top 20 Economic Consequences", col = "red")
plot(Loss_in_billion_dollars~factor(Name_of_Event), output2,  type = "h", xlab = "", ylab = "Loss in billion $", main = "Top 20 Economic Consequences", col = "red")
plot(Loss_in_billion_dollars~factor(Name_of_Event), output2, las = 3, type = "h", xlab = "", ylab = "Loss in billion $", main = "Top 20 Economic Consequences", col = "red")
plot(Loss_in_billion_dollars~factor(Name_of_Event), output2, las = 10, type = "h", xlab = "", ylab = "Loss in billion $", main = "Top 20 Economic Consequences", col = "red")
plot(Loss_in_billion_dollars~factor(Name_of_Event), output2, las = 4, type = "h", xlab = "", ylab = "Loss in billion $", main = "Top 20 Economic Consequences", col = "red")
plot(Loss_in_billion_dollars~factor(Name_of_Event), output2, las = 2, type = "h", xlab = "", ylab = "Loss in billion $", main = "Top 20 Economic Consequences", col = "red")
plot(Loss_in_billion_dollars~factor(Name_of_Event), output2, las = 2, xlab = "", ylab = "Loss in billion $", main = "Top 20 Economic Consequences")
plot(Loss_in_billion_dollars~factor(Name_of_Event), output2, las = 3, xlab = "", ylab = "Loss in billion $", main = "Top 20 Economic Consequences")
plot(Loss_in_billion_dollars~factor(Name_of_Event), output2, las = 2, xlab = "", ylab = "Loss in billion $", main = "Top 20 Economic Consequences")
plot(Loss_in_billion_dollars~factor(Name_of_Event), output2, las = 3, xlab = "", ylab = "Loss in billion $", main = "Top 20 Economic Consequences")
plot(Loss_in_billion_dollars~factor(Name_of_Event), output2, las = 2, xlab = "", ylab = "Loss in billion $", main = "Top 20 Economic Consequences")
